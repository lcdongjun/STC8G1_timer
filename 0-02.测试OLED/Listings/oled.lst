C51 COMPILER V9.60.7.0   OLED                                                              05/25/2025 13:08:40 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE OLED
OBJECT MODULE PLACED IN .\Objects\oled.obj
COMPILER INVOKED BY: D:\mcu\Keil_v5\C51\BIN\C51.EXE bsp\oled\oled.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\main;.\system;.\bs
                    -p\beep;.\bsp\eeprom;.\bsp\oled) DEBUG OBJECTEXTEND PRINT(.\Listings\oled.lst) TABS(2) OBJECT(.\Objects\oled.obj)

line level    source

   1          
   2          #include "oled.h"
   3          #include "oledfont.h"    
   4          //OLED的显存
   5          //存放格式如下.
   6          //[0]0 1 2 3 ... 127  
   7          //[1]0 1 2 3 ... 127  
   8          //[2]0 1 2 3 ... 127  
   9          //[3]0 1 2 3 ... 127  
  10          //[4]0 1 2 3 ... 127  
  11          //[5]0 1 2 3 ... 127  
  12          //[6]0 1 2 3 ... 127  
  13          //[7]0 1 2 3 ... 127         
  14          
  15          
  16          //反显函数
  17          void OLED_ColorTurn(u8 i)
  18          {
  19   1        if(i==0)
  20   1          {
  21   2            OLED_WR_Byte(0xA6,OLED_CMD);//正常显示
  22   2          }
  23   1        if(i==1)
  24   1          {
  25   2            OLED_WR_Byte(0xA7,OLED_CMD);//反色显示
  26   2          }
  27   1      }
  28          
  29          //屏幕旋转180度
  30          void OLED_DisplayTurn(u8 i)
  31          {
  32   1        if(i==0)
  33   1          {
  34   2            OLED_WR_Byte(0xC8,OLED_CMD);//正常显示
  35   2            OLED_WR_Byte(0xA1,OLED_CMD);
  36   2          }
  37   1        if(i==1)
  38   1          {
  39   2            OLED_WR_Byte(0xC0,OLED_CMD);//反转显示
  40   2            OLED_WR_Byte(0xA0,OLED_CMD);
  41   2          }
  42   1      }
  43          
  44          //延时
  45          void IIC_delay(void)
  46          {
  47   1        u8 t=1;
  48   1        while(t--);
  49   1      }
  50          
  51          //起始信号
  52          void I2C_Start(void)
  53          {
  54   1        OLED_SDA_Set();
C51 COMPILER V9.60.7.0   OLED                                                              05/25/2025 13:08:40 PAGE 2   

  55   1        OLED_SCL_Set();
  56   1        IIC_delay();
  57   1        OLED_SDA_Clr();
  58   1        IIC_delay();
  59   1        OLED_SCL_Clr();
  60   1         
  61   1      }
  62          
  63          //结束信号
  64          void I2C_Stop(void)
  65          {
  66   1        OLED_SDA_Clr();
  67   1        OLED_SCL_Set();
  68   1        IIC_delay();
  69   1        OLED_SDA_Set();
  70   1      }
  71          
  72          //等待信号响应
  73          void I2C_WaitAck(void) //测数据信号的电平
  74          {
  75   1        OLED_SDA_Set();
  76   1        IIC_delay();
  77   1        OLED_SCL_Set();
  78   1        IIC_delay();
  79   1        OLED_SCL_Clr();
  80   1        IIC_delay();
  81   1      }
  82          
  83          //写入一个字节
  84          void Send_Byte(u8 dat)
  85          {
  86   1        u8 i;
  87   1        for(i=0;i<8;i++)
  88   1        {
  89   2          OLED_SCL_Clr();//将时钟信号设置为低电平
  90   2          if(dat&0x80)//将dat的8位从最高位依次写入
  91   2          {
  92   3            OLED_SDA_Set();
  93   3          }
  94   2          else
  95   2          {
  96   3            OLED_SDA_Clr();
  97   3          }
  98   2          IIC_delay();
  99   2          OLED_SCL_Set();
 100   2          IIC_delay();
 101   2          OLED_SCL_Clr();
 102   2          dat<<=1;
 103   2        }
 104   1      }
 105          
 106          //发送一个字节
 107          //向SSD1306写入一个字节。
 108          //mode:数据/命令标志 0,表示命令;1,表示数据;
 109          void OLED_WR_Byte(u8 dat,u8 mode)
 110          {
 111   1        I2C_Start();
 112   1        Send_Byte(0x78);
 113   1        I2C_WaitAck();
 114   1        if(mode){Send_Byte(0x40);}
 115   1        else{Send_Byte(0x00);}
 116   1        I2C_WaitAck();
C51 COMPILER V9.60.7.0   OLED                                                              05/25/2025 13:08:40 PAGE 3   

 117   1        Send_Byte(dat);
 118   1        I2C_WaitAck();
 119   1        I2C_Stop();
 120   1      }
 121          
 122          //void Wait() 
 123          //{ 
 124          //while (!(I2CMSST & 0x40)); 
 125          //I2CMSST &= ~0x40; 
 126          //} 
 127          
 128          //void Start() 
 129          //{ 
 130          //I2CMSCR = 0x01; //发送START命令 
 131          //Wait(); 
 132          //} 
 133          
 134          //void SendData(char dat) 
 135          //{ 
 136          //I2CTXD = dat; //写数据到数据缓冲区 
 137          //I2CMSCR = 0x02; //发送SEND命令 
 138          //Wait(); 
 139          //} 
 140          
 141          //void RecvACK() 
 142          //{ 
 143          //I2CMSCR = 0x03; //发送读ACK命令 
 144          //Wait(); 
 145          //} 
 146          
 147          //char RecvData() 
 148          //{ 
 149          //I2CMSCR = 0x04; //发送RECV命令 
 150          //Wait(); 
 151          //return I2CRXD; 
 152          //} 
 153          
 154          //void SendACK() 
 155          //{ 
 156          //I2CMSST = 0x00; //设置ACK信号 
 157          //I2CMSCR = 0x05; //发送ACK命令 
 158          //Wait(); 
 159          //} 
 160          
 161          //void SendNAK() 
 162          //{ 
 163          //I2CMSST = 0x01; //设置NAK信号 
 164          //I2CMSCR = 0x05; //发送ACK命令 
 165          //Wait(); 
 166          //} 
 167          
 168          //void Stop() 
 169          //{ 
 170          //I2CMSCR = 0x06; //发送STOP命令 
 171          //Wait(); 
 172          //}
 173          
 174          //void OLED_WR_Byte(u8 dat,u8 mode)
 175          //{
 176          //Start();
 177          //SendData(0x78);
 178          //RecvACK();
C51 COMPILER V9.60.7.0   OLED                                                              05/25/2025 13:08:40 PAGE 4   

 179          //if(mode){SendData(0x40);}
 180          //else{SendData(0x00);}
 181          //RecvACK();
 182          //SendData(dat);
 183          //RecvACK();
 184          //Stop();
 185          //}
 186          
 187          //坐标设置
 188          
 189          void OLED_Set_Pos(u8 x, u8 y) 
 190          { 
 191   1        OLED_WR_Byte(0xb0+y,OLED_CMD);
 192   1        OLED_WR_Byte(((x&0xf0)>>4)|0x10,OLED_CMD);
 193   1        OLED_WR_Byte((x&0x0f),OLED_CMD);
 194   1      }       
 195          //开启OLED显示    
 196          void OLED_Display_On(void)
 197          {
 198   1        OLED_WR_Byte(0X8D,OLED_CMD);  //SET DCDC命令
 199   1        OLED_WR_Byte(0X14,OLED_CMD);  //DCDC ON
 200   1        OLED_WR_Byte(0XAF,OLED_CMD);  //DISPLAY ON
 201   1      }
 202          //关闭OLED显示     
 203          void OLED_Display_Off(void)
 204          {
 205   1        OLED_WR_Byte(0X8D,OLED_CMD);  //SET DCDC命令
 206   1        OLED_WR_Byte(0X10,OLED_CMD);  //DCDC OFF
 207   1        OLED_WR_Byte(0XAE,OLED_CMD);  //DISPLAY OFF
 208   1      }            
 209          //清屏函数,清完屏,整个屏幕是黑色的!和没点亮一样!!!    
 210          void OLED_Clear(void)  
 211          {  
 212   1        u8 i,n;       
 213   1        for(i=0;i<8;i++)  
 214   1        {  
 215   2          OLED_WR_Byte (0xb0+i,OLED_CMD);    //设置页地址（0~7）
 216   2          OLED_WR_Byte (0x00,OLED_CMD);      //设置显示位置―列低地址
 217   2          OLED_WR_Byte (0x10,OLED_CMD);      //设置显示位置―列高地址   
 218   2          for(n=0;n<128;n++)OLED_WR_Byte(0,OLED_DATA); 
 219   2        } //更新显示
 220   1      }
 221          
 222          //在指定位置显示一个字符,包括部分字符
 223          //x:0~127
 224          //y:0~63         
 225          //sizey:选择字体 6x8  8x16
 226          void OLED_ShowChar(u8 x,u8 y,u8 chr,u8 sizey)
 227          {       
 228   1        u8 c=0,sizex=sizey/2;
 229   1        u16 i=0,size1;
 230   1        if(sizey==8)size1=6;
 231   1        else size1=(sizey/8+((sizey%8)?1:0))*(sizey/2);
 232   1        c=chr-' ';//得到偏移后的值
 233   1        OLED_Set_Pos(x,y);
 234   1        for(i=0;i<size1;i++)
 235   1        {
 236   2          if(i%sizex==0&&sizey!=8) OLED_Set_Pos(x,y++);
 237   2          if(sizey==8) OLED_WR_Byte(asc2_0806[c][i],OLED_DATA);//6X8字号
 238   2          else if(sizey==16) OLED_WR_Byte(asc2_1608[c][i],OLED_DATA);//8x16字号
 239   2          else if(sizey==32) OLED_WR_Byte(asc2_3216[c-16][i],OLED_DATA);//用户添加字号
 240   2          else return;
C51 COMPILER V9.60.7.0   OLED                                                              05/25/2025 13:08:40 PAGE 5   

 241   2        }
 242   1      }
 243          //m^n函数
 244          u32 oled_pow(u8 m,u8 n)
 245          {
 246   1        u32 result=1;  
 247   1        while(n--)result*=m;    
 248   1        return result;
 249   1      }         
 250          //显示数字
 251          //x,y :起点坐标
 252          //num:要显示的数字
 253          //len :数字的位数
 254          //sizey:字体大小      
 255          void OLED_ShowNum(u8 x,u8 y,u32 num,u8 len,u8 sizey)
 256          {           
 257   1        u8 t,temp,m=0;
 258   1        u8 enshow=0;
 259   1        if(sizey==8)m=2;
 260   1        for(t=0;t<len;t++)
 261   1        {
 262   2          temp=(num/oled_pow(10,len-t-1))%10;
 263   2          if(enshow==0&&t<(len-1))
 264   2          {
 265   3            if(temp==0)
 266   3            {
 267   4              OLED_ShowChar(x+(sizey/2+m)*t,y,' ',sizey);
 268   4              continue;
 269   4            }else enshow=1;
 270   3          }
 271   2          OLED_ShowChar(x+(sizey/2+m)*t,y,temp+'0',sizey);
 272   2        }
 273   1      }
 274          //显示一个字符号串
 275          void OLED_ShowString(u8 x,u8 y,u8 *chr,u8 sizey)
 276          {
 277   1        u8 j=0;
 278   1        while (chr[j]!='\0')
 279   1        {   
 280   2          OLED_ShowChar(x,y,chr[j++],sizey);
 281   2          if(sizey==8)x+=6;
 282   2          else x+=sizey/2;
 283   2        }
 284   1      }
 285          //显示汉字
 286          void OLED_ShowChinese(u8 x,u8 y,u8 no,u8 sizey)
 287          {
 288   1        u16 i,size1=(sizey/8+((sizey%8)?1:0))*sizey;
 289   1        for(i=0;i<size1;i++)
 290   1        {
 291   2          if(i%sizey==0) OLED_Set_Pos(x,y++);
 292   2          if(sizey==16) OLED_WR_Byte(Hzk[no][i],OLED_DATA);//16x16字号
 293   2      //    else if(sizey==xx) OLED_WR_Byte(xxx[c][i],OLED_DATA);//用户添加字号
 294   2          else return;
 295   2        }       
 296   1      }
 297          
 298          
 299          //显示图片
 300          //x,y显示坐标
 301          //sizex,sizey,图片长宽
 302          //BMP：要显示的图片
C51 COMPILER V9.60.7.0   OLED                                                              05/25/2025 13:08:40 PAGE 6   

 303          void OLED_DrawBMP(u8 x,u8 y,u8 sizex, u8 sizey,u8 BMP[])
 304          {   
 305   1        u16 j=0;
 306   1        u8 i,m;
 307   1        sizey=sizey/8+((sizey%8)?1:0);
 308   1        for(i=0;i<sizey;i++)
 309   1        {
 310   2          OLED_Set_Pos(x,i+y);
 311   2          for(m=0;m<sizex;m++)
 312   2          {      
 313   3            OLED_WR_Byte(BMP[j++],OLED_DATA);       
 314   3          }
 315   2        }
 316   1      } 
 317          
 318          
 319          
 320          //初始化            
 321          void OLED_Init(void)
 322          {
 323   1        OLED_RES_Clr();
 324   1        delay_ms(200);
 325   1        OLED_RES_Set();
 326   1        
 327   1        OLED_WR_Byte(0xAE,OLED_CMD);//--turn off oled panel
 328   1        OLED_WR_Byte(0x00,OLED_CMD);//---set low column address
 329   1        OLED_WR_Byte(0x10,OLED_CMD);//---set high column address
 330   1        OLED_WR_Byte(0x40,OLED_CMD);//--set start line address  Set Mapping RAM Display Start Line (0x00~0x3F)
 331   1        OLED_WR_Byte(0x81,OLED_CMD);//--set contrast control register
 332   1        OLED_WR_Byte(0xCF,OLED_CMD); // Set SEG Output Current Brightness
 333   1        OLED_WR_Byte(0xA1,OLED_CMD);//--Set SEG/Column Mapping     0xa0左右反置 0xa1正常
 334   1        OLED_WR_Byte(0xC8,OLED_CMD);//Set COM/Row Scan Direction   0xc0上下反置 0xc8正常
 335   1        OLED_WR_Byte(0xA6,OLED_CMD);//--set normal display
 336   1        OLED_WR_Byte(0xA8,OLED_CMD);//--set multiplex ratio(1 to 64)
 337   1        OLED_WR_Byte(0x3f,OLED_CMD);//--1/64 duty
 338   1        OLED_WR_Byte(0xD3,OLED_CMD);//-set display offset Shift Mapping RAM Counter (0x00~0x3F)
 339   1        OLED_WR_Byte(0x00,OLED_CMD);//-not offset
 340   1        OLED_WR_Byte(0xd5,OLED_CMD);//--set display clock divide ratio/oscillator frequency
 341   1        OLED_WR_Byte(0x80,OLED_CMD);//--set divide ratio, Set Clock as 100 Frames/Sec
 342   1        OLED_WR_Byte(0xD9,OLED_CMD);//--set pre-charge period
 343   1        OLED_WR_Byte(0xF1,OLED_CMD);//Set Pre-Charge as 15 Clocks & Discharge as 1 Clock
 344   1        OLED_WR_Byte(0xDA,OLED_CMD);//--set com pins hardware configuration
 345   1        OLED_WR_Byte(0x12,OLED_CMD);
 346   1        OLED_WR_Byte(0xDB,OLED_CMD);//--set vcomh
 347   1        OLED_WR_Byte(0x40,OLED_CMD);//Set VCOM Deselect Level
 348   1        OLED_WR_Byte(0x20,OLED_CMD);//-Set Page Addressing Mode (0x00/0x01/0x02)
 349   1        OLED_WR_Byte(0x02,OLED_CMD);//
 350   1        OLED_WR_Byte(0x8D,OLED_CMD);//--set Charge Pump enable/disable
 351   1        OLED_WR_Byte(0x14,OLED_CMD);//--set(0x10) disable
 352   1        OLED_WR_Byte(0xA4,OLED_CMD);// Disable Entire Display On (0xa4/0xa5)
 353   1        OLED_WR_Byte(0xA6,OLED_CMD);// Disable Inverse Display On (0xa6/a7) 
 354   1        OLED_Clear();
 355   1        OLED_WR_Byte(0xAF,OLED_CMD); /*display ON*/ 
 356   1      }
 357          
 358          
 359          
 360          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1208    ----
C51 COMPILER V9.60.7.0   OLED                                                              05/25/2025 13:08:40 PAGE 7   

   CONSTANT SIZE    =   3000    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      50
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
