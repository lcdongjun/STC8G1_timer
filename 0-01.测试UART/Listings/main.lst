C51 COMPILER V9.60.7.0   MAIN                                                              05/24/2025 23:04:50 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\mcu\Keil_v5\C51\BIN\C51.EXE main\main.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\main;.\system) DEBUG O
                    -BJECTEXTEND PRINT(.\Listings\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "config.h"
   2          #include "uart.h"
   3          
   4          
   5          typedef unsigned char      uint8_t;
   6          typedef signed char        int8_t;
   7          typedef unsigned int       uint16_t;
   8          typedef signed int         int16_t;
   9          typedef unsigned long      uint32_t;
  10          typedef signed long        int32_t;
  11          
  12          // 设置 P3.1 为推挽输出 + 映射 CCP0 到 P3.1
  13          void Buzzer_Pin_Init(void)
  14          {
  15   1          P3M1 &= ~(1 << 1);
  16   1          P3M0 |=  (1 << 1);     // P3.1 推挽输出
  17   1          P_SW1 |= 0x10;         // 映射 CCP0 -> CCP0_2 (P3.1)
  18   1      }
  19          
  20          // 初始化 PWM 输出：PCA + PWM 模块0（CCP0）
  21          void PWM_Init(void)
  22          {
  23   1          CCON = 0x00;           // PCA 控制清空
  24   1          CMOD = 0x00;           // PCA时钟 = 系统时钟 / 128
  25   1          CL = 0x00;             // 清空 PCA 计数器
  26   1          CH = 0x00;
  27   1      
  28   1          CCAPM0 = 0x42;         // 模块0: PWM 模式 + 比较使能
  29   1          PCA_PWM0 = 0x00;       // 8位PWM
  30   1          CR = 1;                // 启动 PCA
  31   1      }
  32          
  33          // 设置蜂鸣器输出频率和音量
  34          // freq: 频率（Hz），volume: 占空比（1~99，百分比）
  35          void Buzzer_Set(uint16_t freq, uint8_t volume)
  36          {
  37   1          uint32_t pwm_clock = FOSC / 128; // PCA时钟 = 系统时钟/128
  38   1          uint32_t period;
  39   1          uint8_t duty;
  40   1      
  41   1          if(freq == 0 || volume == 0) {
  42   2              CCAP0H = 0xFF;  // 占空比 0%，无声
  43   2              CCAP0L = 0xFF;
  44   2              return;
  45   2          }
  46   1      
  47   1          period = pwm_clock / freq;
  48   1          if(period > 256) period = 256;   // 限制最大周期
  49   1          if(period < 10)  period = 10;    // 防止频率太高
  50   1      
  51   1          duty = period * (100 - volume) / 100;
  52   1      
  53   1          CCAP0H = duty;
  54   1          CCAP0L = duty;
C51 COMPILER V9.60.7.0   MAIN                                                              05/24/2025 23:04:50 PAGE 2   

  55   1      }
  56          
  57          // 延时函数（单位 ms）
  58          void DelayMs(uint16_t ms)
  59          {
  60   1          uint16_t i, j;
  61   1          for(i = ms; i > 0; i--)
  62   1              for(j = 110; j > 0; j--);
  63   1      }
  64          
  65          // 播放单个音符
  66          void Beep_Note(uint16_t freq, uint8_t volume, uint16_t duration_ms)
  67          {
  68   1          Buzzer_Set(freq, volume);
  69   1          DelayMs(duration_ms);
  70   1          Buzzer_Set(0, 0); // 关闭
  71   1          DelayMs(10);      // 音符间隔
  72   1      }
  73          
  74          // 简单播放一段音乐（多音符）
  75          void Play_Melody(void)
  76          {
  77   1          // 简单 C调（do re mi so）
  78   1          Beep_Note(523, 90, 300);  // Do
  79   1            DelayMs(500);
  80   1          Beep_Note(587, 90, 300);  // Re
  81   1            DelayMs(500);
  82   1          Beep_Note(659, 90, 300);  // Mi
  83   1            DelayMs(500);
  84   1          Beep_Note(784, 90, 300);  // So
  85   1            DelayMs(500);
  86   1          Beep_Note(659, 90, 300);  // Mi
  87   1            DelayMs(500);
  88   1          Beep_Note(784, 90, 600);  // So
  89   1            DelayMs(500);
  90   1      }
  91          
  92          void main(void)
  93          {
  94   1          Buzzer_Pin_Init(); // 配置引脚
  95   1          PWM_Init();        // 初始化PWM
  96   1      
  97   1          while(1)
  98   1          {
  99   2              Play_Melody(); // 播放一段旋律
 100   2              DelayMs(1000);
 101   2          }
 102   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    345    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      11
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
