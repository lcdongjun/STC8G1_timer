C51 COMPILER V9.54   BEEP                                                                  05/31/2025 15:47:18 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE BEEP
OBJECT MODULE PLACED IN .\Objects\beep.obj
COMPILER INVOKED BY: D:\keil5\C51\BIN\C51.EXE bsp\beep\beep.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(.\main;.\system;.\bs
                    -p\beep;.\bsp\eeprom;.\bsp\oled;.\bsp\encoder;.\bsp\timer0) DEBUG OBJECTEXTEND PRINT(.\Listings\beep.lst) TABS(2) OBJECT(
                    -.\Objects\beep.obj)

line level    source

   1          #include "beep.h"
   2          #include "uart.h"
   3          
   4          unsigned char highTicks = 0;
   5          unsigned char lowTicks = 0;
   6          unsigned char pwmCounter = 0;
   7          unsigned int totalTicks = 0;
   8          unsigned int reload = 0;
   9          bit pwmHigh = 1;
  10          
  11          // ========== 核心封装函数：设置PWM频率和占空比 ==========
  12          void PWM_Set(unsigned int freq_hz, unsigned char duty_percent)
  13          {
  14   1          static unsigned int last_freq = 0;
  15   1          static unsigned char last_duty = 0;
  16   1          unsigned long period_us;
  17   1          unsigned int pwmInterval_us;
  18   1      
  19   1          // 限制 duty 范围（1 ~ 99）
  20   1          if (duty_percent < 1)
  21   1              duty_percent = 1;
  22   1          if (duty_percent > 99)
  23   1              duty_percent = 99;
  24   1      
  25   1          // 如果频率和占空比都没变，直接返回，避免重复设置
  26   1          if (freq_hz == last_freq && duty_percent == last_duty)
  27   1              return;
  28   1      
  29   1          last_freq = freq_hz;
  30   1          last_duty = duty_percent;
  31   1      
  32   1          // 计算周期：1s = 1,000,000us
  33   1          period_us = 1000000UL / freq_hz;
  34   1          pwmInterval_us = 50;
  35   1      
  36   1          // 总tick数 = 总周期 / 每tick间隔
  37   1          totalTicks = period_us / pwmInterval_us;
  38   1          highTicks = (totalTicks * duty_percent) / 100;
  39   1          lowTicks = totalTicks - highTicks;
  40   1      
  41   1          // 设置 Timer1 为 pwmInterval_us（50us）中断周期
  42   1          TMOD &= 0x0F;
  43   1          TMOD |= 0x10; // 定时器1，16位
  44   1      
  45   1          reload = 65536 - (FOSC / 12 / 1000000 * pwmInterval_us);
  46   1          TH1 = reload >> 8;
  47   1          TL1 = reload & 0xFF;
  48   1      
  49   1          TR1 = 1;
  50   1          ET1 = 1;
  51   1          EA = 1;
  52   1      }
  53          void PWM_OFF(void)
C51 COMPILER V9.54   BEEP                                                                  05/31/2025 15:47:18 PAGE 2   

  54          {
  55   1          BEEP = 0;
  56   1          TR1 = 0;
  57   1          ET1 = 0;
  58   1      }
  59          void PWM_ON(void)
  60          {
  61   1          BEEP = 1;
  62   1          TR1 = 1;
  63   1          ET1 = 1;
  64   1      }
  65          // ========== 定时器1中断服务：生成PWM ==========
  66          void TM1_Isr(void) interrupt 3
  67          {
  68   1          // 重载计数值（保持 50us 中断周期）
  69   1          reload = 65536 - (FOSC / 12 / 1000000 * 50);
  70   1          TH1 = reload >> 8;
  71   1          TL1 = reload & 0xFF;
  72   1      
  73   1          pwmCounter++;
  74   1          if (pwmHigh)
  75   1          {
  76   2              if (pwmCounter >= highTicks)
  77   2              {
  78   3                  pwmCounter = 0;
  79   3                  pwmHigh = 0;
  80   3                  BEEP = 0;
  81   3              }
  82   2          }
  83   1          else
  84   1          {
  85   2              if (pwmCounter >= lowTicks)
  86   2              {
  87   3                  pwmCounter = 0;
  88   3                  pwmHigh = 1;
  89   3                  BEEP = 1;
  90   3              }
  91   2          }
  92   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    351    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     10       7
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
